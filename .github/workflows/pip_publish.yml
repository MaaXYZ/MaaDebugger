name: pip publish

on:
  push:
    tags:
      - "v*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: set_tag
        run: |
            is_release=${{ startsWith(github.ref, 'refs/tags/v') }}
            is_pre_release=${{ contains(github.ref, '-alpha.') || contains(github.ref, '-beta.') || contains(github.ref, '-rc.') }}
            commit_hash=$(git rev-parse --short HEAD)

            if $is_release; then
              tag=${{ github.ref_name }}
            else
              tag=$(git describe --tags --match "v*" --exclude "*-post*" --long || true)
            fi
            if [[ $tag != v* ]]; then
              if $is_release; then echo "::error::Failed to get tag on releasing" && exit 1; fi
              ver_core=$(curl -sX GET "https://api.github.com/repos/MaaXYZ/MaaFramework/releases/latest" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | awk '/tag_name/{print $4}' FS='["]' || true)
              tag=$(date "+$ver_core-1%m%d-${commit_hash}")
              if [[ $tag != v* ]]; then
                tag=$(date "+v%Y.%-m.%-d-2%H%M-${commit_hash}")
              fi
            fi

            echo "raw_tag=$tag"
            if $is_release; then
              version=${tag#v}
            else
              ver_core=${tag%-*-*}
              suffixs=(${tag//-/ })
              tag=${ver_core}-post.${suffixs[-2]}-ci.${{ github.run_id }}
              version=${tag#v}+${commit_hash}.$(date +%Y%m%d)
            fi

            if $is_release; then
              if $is_pre_release; then
                build_config="RelWithDebInfo"
              else
                build_config="Release"
              fi
            else
              build_config="Debug"
            fi

            echo "tag=$tag
            version=$version
            is_release=$is_release
            is_pre_release=$is_pre_release
            build_config=$build_config" | tee -a "$GITHUB_OUTPUT"

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        with:
          config: .github/cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: "git-cliff/CHANGELOG.md"

      - uses: softprops/action-gh-release@v2.3.2
        with:
          body_path: "git-cliff/CHANGELOG.md"
          prerelease: ${{ steps.set_tag.outputs.is_pre_release == 'true' }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Update package
        run: |
          python -m pip install --upgrade pip
          python -m pip install pdm tomlkit packaging

      - name: Install pdm and publish
        run: |
          python tools/pip_pack.py ${{ github.ref_name }}
          pdm publish --password ${{ secrets.PYPI_TOKEN }}

      - name: Commit Version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml src/MaaDebugger/__version__.py
          git commit -m "chore: Release ${{ github.ref_name }}"
          git push origin HEAD:main

